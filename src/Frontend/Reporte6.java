/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontend;

import Backend.Estudiante;
import Backend.ManejadorArchivosBinarios;
import Backend.Prestamo;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;

/**
 *
 * @author bryan
 */
public class Reporte6 extends javax.swing.JDialog {
    private final String INGENIERIA = "Ingeniería";
    private final String MEDICINA = "Medicina";
    private final String DERECHO = "Derecho";
    private final String ARQUITECTURA = "Arquitectura";
    private final String ADMINISTRACION = "Administración";
    private final String ESTUDIANTE = "ESTUDIANTE";
    private int cantidadPrestamo;
    private List<Prestamo> listadoPrestamos;
    private ObservableList<Prestamo> observableList;
    private ManejadorArchivosBinarios<Prestamo> archivosPrestamos;
    private ManejadorArchivosBinarios<Estudiante> archivosEstudiantes;
    
    /**
     * Creates new form ReporteHechosCarrera
     */
    public Reporte6(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.cantidadPrestamo = 0;
        this.listadoPrestamos = new ArrayList<>();
        this.observableList = ObservableCollections.observableList(listadoPrestamos);
        this.archivosPrestamos = new ManejadorArchivosBinarios<>();
        this.archivosEstudiantes = new ManejadorArchivosBinarios<>();
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public List<Prestamo> getListadoPrestamos() {
        return listadoPrestamos;
    }

    public void setListadoPrestamos(List<Prestamo> listadoPrestamos) {
        this.listadoPrestamos = listadoPrestamos;
    }

    public ObservableList<Prestamo> getObservableList() {
        return observableList;
    }

    public void setObservableList(ObservableList<Prestamo> observableList) {
        this.observableList = observableList;
    }
    
    public void actualizarLista(List<Prestamo> lista){
        observableList.clear();
        observableList.addAll(lista);
    }
    /*
    Metodo encargado de limpiar los campos de texto
    */
    public void limpiar(){
        observableList.clear();
        txtCantidadPrestamos.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        comboBoxCarreras = new javax.swing.JComboBox<>();
        lblPrestamosPorCarrera = new javax.swing.JLabel();
        botonBuscar = new javax.swing.JButton();
        lblCantidadPrestamos = new javax.swing.JLabel();
        txtCantidadPrestamos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        comboBoxCarreras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ingeniería", "Medicina", "Derecho", "Arquitectura", "Administración" }));

        lblPrestamosPorCarrera.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        lblPrestamosPorCarrera.setText("Prestamos por Carrera");

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        lblCantidadPrestamos.setText("Cantidad Prestamos:");

        txtCantidadPrestamos.setEditable(false);

        jTable1.setForeground(new java.awt.Color(0, 153, 153));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${observableList}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${carne}"));
        columnBinding.setColumnName("Carne");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoPrestamo}"));
        columnBinding.setColumnName("Codigo Prestamo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigolibro}"));
        columnBinding.setColumnName("Codigolibro");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaPrestamo}"));
        columnBinding.setColumnName("Fecha Prestamo");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPrestamosPorCarrera)
                                .addGap(0, 244, Short.MAX_VALUE))
                            .addComponent(comboBoxCarreras, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCantidadPrestamos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidadPrestamos, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPrestamosPorCarrera)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCantidadPrestamos)
                    .addComponent(txtCantidadPrestamos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        // TODO add your handling code here:
        cantidadPrestamo = 0;
        if (comboBoxCarreras.getSelectedItem().toString().equalsIgnoreCase(INGENIERIA)) {
            actualizarLista(agregarListadoDePrestamos(1, archivosPrestamos.leerListaArchivos(".pre")));
        } else if (comboBoxCarreras.getSelectedItem().toString().equalsIgnoreCase(MEDICINA)){
            actualizarLista(agregarListadoDePrestamos(2, archivosPrestamos.leerListaArchivos(".pre")));
        } else if (comboBoxCarreras.getSelectedItem().toString().equalsIgnoreCase(DERECHO)){
            actualizarLista(agregarListadoDePrestamos(3, archivosPrestamos.leerListaArchivos(".pre")));
        } else if (comboBoxCarreras.getSelectedItem().toString().equalsIgnoreCase(ARQUITECTURA)){
            actualizarLista(agregarListadoDePrestamos(4, archivosPrestamos.leerListaArchivos(".pre")));
        } else {
            actualizarLista(agregarListadoDePrestamos(5, archivosPrestamos.leerListaArchivos(".pre")));
        }
        if (cantidadPrestamo == 0) {
            JOptionPane.showMessageDialog(this, "No se han realizado prestamos por esta carrera");
        }
        txtCantidadPrestamos.setText(Integer.toString(cantidadPrestamo));
    }//GEN-LAST:event_botonBuscarActionPerformed

    private List<Prestamo> agregarListadoDePrestamos(int caso, List<Prestamo> listadoAnalizar) {
        List<Prestamo> prestamoCarrera = new ArrayList<>();
        Estudiante estudiante;
        for (int i = 0; i < listadoAnalizar.size(); i++) {
            estudiante = archivosEstudiantes.leerArchivo(ESTUDIANTE, Integer.toString(listadoAnalizar.get(i).getCarne()), ".est");
            if (estudiante.getCodigoCarrera() == caso) {
                cantidadPrestamo++;
                prestamoCarrera.add(listadoAnalizar.get(i));
            }
        }
        return prestamoCarrera;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JComboBox<String> comboBoxCarreras;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCantidadPrestamos;
    private javax.swing.JLabel lblPrestamosPorCarrera;
    private javax.swing.JTextField txtCantidadPrestamos;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}